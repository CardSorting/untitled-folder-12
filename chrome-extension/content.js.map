{"version":3,"file":"content.js","mappings":"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","sources":["webpack://text-reader-extension/./src/config.ts","webpack://text-reader-extension/./src/utils/celeryClient.ts","webpack://text-reader-extension/./src/utils/logger.ts","webpack://text-reader-extension/webpack/bootstrap","webpack://text-reader-extension/webpack/runtime/define property getters","webpack://text-reader-extension/webpack/runtime/hasOwnProperty shorthand","webpack://text-reader-extension/webpack/runtime/make namespace object","webpack://text-reader-extension/./src/content.ts"],"sourcesContent":["// Configuration for the Chrome extension\n\ninterface Config {\n    API_ENDPOINT: string;\n    celery: {\n        timeout: number;\n        pollInterval: number;\n        maxRetries: number;\n    };\n    endpoints: {\n        processText: string;\n        taskStatus: string;\n    };\n}\n\nexport const config: Config = {\n    API_ENDPOINT: 'http://localhost:5001', // Default local development server\n    celery: {\n        timeout: 30000, // 30 seconds\n        pollInterval: 1000, // 1 second\n        maxRetries: 3\n    },\n    endpoints: {\n        processText: '/process_text',\n        taskStatus: '/task_status'\n    }\n};\n","// Celery client for handling text processing tasks\nimport { createLogger, Logger } from './logger';\nimport { config } from '../config';\n\ninterface ProcessOptions {\n    language?: string;\n    rate?: number;\n    pitch?: number;\n    volume?: number;\n    emotionalContext?: Record<string, any>;\n    textStructure?: Record<string, any>;\n}\n\ninterface TaskResponse {\n    task_id: string;\n    status?: string;\n}\n\ninterface TaskStatus {\n    taskId: string;\n    status: string;\n    result?: any;\n    error?: string;\n}\n\ninterface HealthCheckResponse {\n    status: string;\n    message?: string;\n}\n\nexport class CeleryClient {\n    private logger: Logger;\n    private baseUrl: string;\n    private taskEndpoint: string;\n    private statusEndpoint: string;\n    private config: {\n        timeout: number;\n        [key: string]: any;\n    };\n\n    constructor(baseUrl: string = config.API_ENDPOINT) {\n        this.logger = createLogger('CeleryClient');\n        this.baseUrl = baseUrl;\n        this.taskEndpoint = `${this.baseUrl}${config.endpoints.processText}`;\n        this.statusEndpoint = `${this.baseUrl}${config.endpoints.taskStatus}`;\n        this.config = config.celery;\n        \n        this.logger.info('CeleryClient initialized', {\n            baseUrl: this.baseUrl,\n            taskEndpoint: this.taskEndpoint,\n            statusEndpoint: this.statusEndpoint,\n            timeout: this.config.timeout\n        });\n    }\n\n    public async processText(text: string, options: ProcessOptions = {}): Promise<TaskStatus> {\n        this.logger.debug('Processing text with Celery', { \n            textLength: text.length\n        });\n\n        try {\n            const response = await fetch(this.taskEndpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    text,\n                    language: options.language || 'en',\n                    rate: options.rate || 1.0,\n                    pitch: options.pitch || 1.0,\n                    volume: options.volume || 1.0,\n                    emotionalContext: options.emotionalContext || {},\n                    textStructure: options.textStructure || {}\n                }),\n                signal: AbortSignal.timeout(this.config.timeout)\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json().catch(() => ({}));\n                throw new Error(`HTTP error! status: ${response.status}, message: ${errorData.error || 'Unknown error'}`);\n            }\n\n            const data = await response.json() as TaskResponse;\n            this.logger.success('Text processed successfully', data);\n            return {\n                taskId: data.task_id,\n                status: 'PENDING'\n            };\n        } catch (error) {\n            this.logger.error('Error processing text:', { error: error instanceof Error ? error.message : 'Unknown error' });\n            throw error;\n        }\n    }\n\n    public async checkTaskStatus(taskId: string): Promise<TaskStatus> {\n        try {\n            const response = await fetch(`${this.statusEndpoint}/${taskId}`);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            return {\n                taskId,\n                status: data.status,\n                result: data.result,\n                error: data.error\n            };\n        } catch (error) {\n            this.logger.error('Error checking task status:', { error: error instanceof Error ? error.message : 'Unknown error' });\n            throw error;\n        }\n    }\n\n    public async pollTaskStatus(taskId: string, interval: number = 1000): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const poll = async () => {\n                try {\n                    const status = await this.checkTaskStatus(taskId);\n                    if (status.status === 'SUCCESS') {\n                        resolve(status.result);\n                    } else if (status.status === 'FAILURE') {\n                        reject(new Error(status.error || 'Task failed'));\n                    } else {\n                        setTimeout(poll, interval);\n                    }\n                } catch (error) {\n                    reject(error);\n                }\n            };\n            poll();\n        });\n    }\n\n    public async checkHealth(): Promise<HealthCheckResponse> {\n        try {\n            const response = await fetch(`${this.baseUrl}/health`, {\n                signal: AbortSignal.timeout(5000) // Short timeout for health checks\n            });\n            return await response.json() as HealthCheckResponse;\n        } catch (error) {\n            this.logger.error('Health check failed:', { error: error instanceof Error ? error.message : 'Unknown error' });\n            throw error;\n        }\n    }\n\n    public async cancelTask(taskId: string): Promise<void> {\n        try {\n            const response = await fetch(`${this.statusEndpoint}/${taskId}/cancel`, {\n                method: 'POST'\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to cancel task: ${taskId}`);\n            }\n        } catch (error) {\n            this.logger.error('Error canceling task:', { error: error instanceof Error ? error.message : 'Unknown error' });\n            throw error;\n        }\n    }\n}\n\n// Export singleton instance\nexport const celeryClient = new CeleryClient();\n","// Simple logger utility for Chrome extension\n\ntype LogLevel = 'DEBUG' | 'INFO' | 'WARN' | 'ERROR' | 'SUCCESS';\n\ninterface LogMessage {\n    timestamp: string;\n    level: LogLevel;\n    context: string;\n    message: string;\n    data?: Record<string, any>;\n}\n\nexport interface Logger {\n    debug(message: string, data?: Record<string, any>): void;\n    info(message: string, data?: Record<string, any>): void;\n    warn(message: string, data?: Record<string, any>): void;\n    error(message: string | Error, data?: Record<string, any>): void;\n    success(message: string, data?: Record<string, any>): void;\n    createSubLogger(subContext: string): Logger;\n}\n\nclass LoggerImpl implements Logger {\n    private context: string;\n\n    constructor(context: string) {\n        this.context = context;\n    }\n\n    private _formatMessage(level: LogLevel, message: string, data: Record<string, any> = {}): LogMessage {\n        const timestamp = new Date().toISOString();\n        return {\n            timestamp,\n            level,\n            context: this.context,\n            message,\n            data\n        };\n    }\n\n    public debug(message: string, data?: Record<string, any>): void {\n        console.debug(this._formatMessage('DEBUG', message, data));\n    }\n\n    public info(message: string, data?: Record<string, any>): void {\n        console.info(this._formatMessage('INFO', message, data));\n    }\n\n    public warn(message: string, data?: Record<string, any>): void {\n        console.warn(this._formatMessage('WARN', message, data));\n    }\n\n    public error(message: string | Error, data?: Record<string, any>): void {\n        const errorMessage = message instanceof Error ? message.message : message;\n        const errorData = message instanceof Error \n            ? { ...data, stack: message.stack }\n            : data;\n        console.error(this._formatMessage('ERROR', errorMessage, errorData));\n    }\n\n    public success(message: string, data?: Record<string, any>): void {\n        console.info(this._formatMessage('SUCCESS', message, data));\n    }\n\n    public createSubLogger(subContext: string): Logger {\n        return new LoggerImpl(`${this.context}:${subContext}`);\n    }\n}\n\nexport function createLogger(context: string): Logger {\n    return new LoggerImpl(context);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Content script for handling text selection and speech synthesis\nimport { createLogger, Logger } from './utils/logger';\nimport { celeryClient } from './utils/celeryClient';\n\ninterface ContentState {\n    isProcessing: boolean;\n    isPaused: boolean;\n    selectedText: string;\n    currentUtterance: SpeechSynthesisUtterance | null;\n    preferredVoice: SpeechSynthesisVoice | null;\n    settings: {\n        rate: number;\n        pitch: number;\n        volume: number;\n        autoResume: boolean;\n        language: string;\n    };\n}\n\ninterface TTSSettings {\n    ttsSettings?: {\n        rate: number;\n        pitch: number;\n        volume: number;\n        autoResume: boolean;\n        language: string;\n    };\n}\n\nclass ContentController {\n    private static instance: ContentController;\n    private logger: Logger;\n    private state: ContentState;\n    private speechSynthesis: SpeechSynthesis;\n    private voices: SpeechSynthesisVoice[];\n\n    private constructor() {\n        this.logger = createLogger('Content');\n        this.state = {\n            isProcessing: false,\n            isPaused: false,\n            selectedText: '',\n            currentUtterance: null,\n            preferredVoice: null,\n            settings: {\n                rate: 1.0,\n                pitch: 1.0,\n                volume: 1.0,\n                autoResume: true,\n                language: document.documentElement.lang || 'en'\n            }\n        };\n\n        // Initialize web speech synthesis\n        this.speechSynthesis = window.speechSynthesis;\n        this.voices = [];\n\n        // Initialize listeners\n        this.initializeListeners();\n        \n        // Signal that content script is ready with retry\n        this.signalContentScriptReady();\n    }\n\n    public static getInstance(): ContentController {\n        if (!ContentController.instance) {\n            ContentController.instance = new ContentController();\n        }\n        return ContentController.instance;\n    }\n\n    private async loadSettings(): Promise<void> {\n        try {\n            const settings = await chrome.storage.local.get('ttsSettings') as TTSSettings;\n            if (settings.ttsSettings) {\n                this.state.settings = { ...this.state.settings, ...settings.ttsSettings };\n            }\n        } catch (error) {\n            this.logger.error('Error loading settings:', { error: error instanceof Error ? error.message : 'Unknown error' });\n        }\n    }\n\n    private async saveSettings(): Promise<void> {\n        try {\n            await chrome.storage.local.set({ ttsSettings: this.state.settings });\n        } catch (error) {\n            this.logger.error('Error saving settings:', { error: error instanceof Error ? error.message : 'Unknown error' });\n        }\n    }\n\n    private async initializeVoices(): Promise<void> {\n        if ('onvoiceschanged' in this.speechSynthesis) {\n            this.speechSynthesis.onvoiceschanged = () => {\n                this.voices = this.speechSynthesis.getVoices();\n                const preferredVoice = this.voices.find(voice => \n                    voice.lang.startsWith(this.state.settings.language)\n                );\n                if (preferredVoice) {\n                    this.state.preferredVoice = preferredVoice;\n                }\n            };\n        }\n        this.voices = this.speechSynthesis.getVoices();\n    }\n\n    private initializeListeners(): void {\n        // Listen for messages from the background script\n        chrome.runtime.onMessage.addListener(this.handleMessage.bind(this));\n\n        // Listen for text selection\n        document.addEventListener('mouseup', this.handleTextSelection.bind(this));\n        document.addEventListener('keyup', this.handleKeyboardShortcuts.bind(this));\n\n        // Handle visibility changes\n        document.addEventListener('visibilitychange', this.handleVisibilityChange.bind(this));\n        window.addEventListener('beforeunload', this.handleBeforeUnload.bind(this));\n    }\n\n    private handleMessage(\n        message: any,\n        sender: chrome.runtime.MessageSender,\n        sendResponse: (response?: any) => void\n    ): void {\n        if (message.type === 'updateSettings') {\n            this.updateSettings(message.settings);\n            sendResponse({ success: true });\n        }\n    }\n\n    private handleTextSelection(event: MouseEvent): void {\n        const selection = window.getSelection();\n        if (selection) {\n            this.state.selectedText = selection.toString().trim();\n        }\n    }\n\n    private handleKeyboardShortcuts(event: KeyboardEvent): void {\n        // Add keyboard shortcut handling logic here\n    }\n\n    private handleVisibilityChange(): void {\n        if (document.hidden && this.state.settings.autoResume) {\n            this.pauseSpeech();\n        } else {\n            this.resumeSpeech();\n        }\n    }\n\n    private handleBeforeUnload(): void {\n        this.stopSpeech();\n    }\n\n    private updateSettings(newSettings: Partial<ContentState['settings']>): void {\n        this.state.settings = { ...this.state.settings, ...newSettings };\n        this.saveSettings();\n    }\n\n    private async speakText(text: string, options: Partial<ContentState['settings']> = {}): Promise<void> {\n        if (this.state.isProcessing) {\n            return;\n        }\n\n        try {\n            const utterance = new SpeechSynthesisUtterance(text);\n            utterance.rate = options.rate || this.state.settings.rate;\n            utterance.pitch = options.pitch || this.state.settings.pitch;\n            utterance.volume = options.volume || this.state.settings.volume;\n            utterance.voice = this.state.preferredVoice;\n\n            // Handle speech events\n            utterance.onstart = this.onstart.bind(this);\n            utterance.onend = this.onend.bind(this);\n            utterance.onerror = this.onerror.bind(this);\n            utterance.onpause = this.onpause.bind(this);\n            utterance.onresume = this.onresume.bind(this);\n            utterance.onboundary = this.onboundary.bind(this);\n\n            this.state.currentUtterance = utterance;\n            this.state.isProcessing = true;\n            this.speechSynthesis.speak(utterance);\n        } catch (error) {\n            this.handleError(error);\n        }\n    }\n\n    private onstart(): void {\n        this.logger.debug('Speech started');\n    }\n\n    private onend(): void {\n        this.logger.debug('Speech ended');\n        this.reset();\n    }\n\n    private onerror(event: SpeechSynthesisErrorEvent): void {\n        this.logger.error('Speech error:', event);\n        this.reset();\n    }\n\n    private onpause(): void {\n        this.logger.debug('Speech paused');\n    }\n\n    private onresume(): void {\n        this.logger.debug('Speech resumed');\n    }\n\n    private onboundary(event: SpeechSynthesisEvent): void {\n        this.logger.debug('Speech boundary reached:', event);\n    }\n\n    private pauseSpeech(): void {\n        if (this.speechSynthesis.speaking && !this.state.isPaused) {\n            this.speechSynthesis.pause();\n            this.state.isPaused = true;\n        }\n    }\n\n    private resumeSpeech(): void {\n        if (this.state.isPaused) {\n            this.speechSynthesis.resume();\n            this.state.isPaused = false;\n        }\n    }\n\n    private stopSpeech(): void {\n        if (this.speechSynthesis.speaking) {\n            this.speechSynthesis.cancel();\n        }\n        this.reset();\n    }\n\n    private reset(): void {\n        this.state.isProcessing = false;\n        this.state.currentUtterance = null;\n        this.state.isPaused = false;\n    }\n\n    private handleError(error: unknown): void {\n        this.logger.error('Error:', { error: error instanceof Error ? error.message : 'Unknown error' });\n        this.reset();\n    }\n\n    private async processSelectedText(): Promise<void> {\n        if (this.state.isProcessing || !this.state.selectedText) {\n            return;\n        }\n\n        try {\n            await celeryClient.processText(this.state.selectedText, this.state.settings);\n            // The background script will handle the result and call back with processResult\n        } catch (error) {\n            this.handleError(error);\n        }\n    }\n\n    private async signalContentScriptReady(retries = 3): Promise<void> {\n        try {\n            await chrome.runtime.sendMessage({ type: 'contentScriptReady' });\n            this.logger.info('Content script ready signal sent successfully');\n        } catch (error) {\n            if (retries > 0 && error instanceof Error && error.message.includes('Receiving end does not exist')) {\n                this.logger.info('Background script not ready, retrying in 1 second...');\n                setTimeout(() => this.signalContentScriptReady(retries - 1), 1000);\n            } else {\n                this.logger.error('Failed to signal content script ready:', { error: error instanceof Error ? error.message : 'Unknown error' });\n            }\n        }\n    }\n}\n\n// Export singleton instance\nexport const contentController = ContentController.getInstance();\n"],"names":[],"sourceRoot":""}