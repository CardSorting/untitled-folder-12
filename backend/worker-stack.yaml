AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for Text Processor Worker infrastructure'

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC where the worker will be deployed

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of subnet IDs where the worker can be deployed

  WorkerImageUri:
    Type: String
    Default: 590184106837.dkr.ecr.us-west-2.amazonaws.com/text-processor-worker:latest
    Description: URI of the worker Docker image in ECR

  CeleryBrokerUrl:
    Type: String
    Description: URL for the Celery broker (CloudAMQP)
    NoEcho: true

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: TextProcessorWorkerCluster

  WorkerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: text-processor-worker
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: '256'
      Memory: '512'
      MemoryReservation: 256
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSTaskRole.Arn
      ContainerDefinitions:
        - Name: worker
          Image: !Ref WorkerImageUri
          Essential: true
          Environment:
            - Name: CELERY_BROKER_URL
              Value: !Ref CeleryBrokerUrl
            - Name: PYTHONUNBUFFERED
              Value: '1'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref WorkerLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: worker
          HealthCheck:
            Command:
              - CMD-SHELL
              - celery -A celery_worker inspect ping || exit 1
            Interval: 60
            Timeout: 10
            Retries: 3
            StartPeriod: 120

  WorkerService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: TextProcessorWorkerService
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref WorkerTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref WorkerSecurityGroup
          Subnets: !Ref SubnetIds
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      EnableExecuteCommand: true

  WorkerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Text Processor Worker
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5671
          ToPort: 5672
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
      Policies:
        - PolicyName: ECSExecPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssmmessages:CreateControlChannel
                  - ssmmessages:CreateDataChannel
                  - ssmmessages:OpenControlChannel
                  - ssmmessages:OpenDataChannel
                Resource: '*'

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/CloudWatchFullAccess

  WorkerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/text-processor-worker
      RetentionInDays: 14

Outputs:
  ClusterName:
    Description: The name of the ECS cluster
    Value: !Ref ECSCluster

  ServiceName:
    Description: The name of the ECS service
    Value: !Ref WorkerService

  TaskDefinitionArn:
    Description: The ARN of the task definition
    Value: !Ref WorkerTaskDefinition

  LogGroupName:
    Description: The name of the CloudWatch Log Group
    Value: !Ref WorkerLogGroup
